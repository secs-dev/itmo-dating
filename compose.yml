services:
  authik-0:
    image: ghcr.io/secs-dev/itmo-dating-authik:latest
    build:
      context: ./backend/authik
    environment:
      ITMO_DATING_VAULT_TOKEN: ${ITMO_DATING_VAULT_TOKEN?:err}
      ITMO_DATING_KEY_STORE_PASSWORD: ${ITMO_DATING_KEYSTORE_PASSWORD?:err}
    tty: true
    hostname: authik-0.dating.se.ifmo.ru
    depends_on:
      database:
        condition: service_healthy
      consul:
        condition: service_started
      config:
        condition: service_started
  authik-1:
    extends:
      service: authik-0
    hostname: authik-1.dating.se.ifmo.ru
    profiles:
      - reliability
  matchmaker-0:
    image: ghcr.io/secs-dev/itmo-dating-matchmaker:latest
    build:
      context: ./backend/matchmaker
    environment:
      ITMO_DATING_VAULT_TOKEN: ${ITMO_DATING_VAULT_TOKEN?:err}
      ITMO_DATING_KEY_STORE_PASSWORD: ${ITMO_DATING_KEYSTORE_PASSWORD?:err}
    tty: true
    hostname: matchmaker-0.dating.se.ifmo.ru
    depends_on:
      database:
        condition: service_healthy
      consul:
        condition: service_started
  matchmaker-1:
    extends:
      service: matchmaker-0
    hostname: matchmaker-1.dating.se.ifmo.ru
    profiles:
      - reliability
  people-0:
    image: ghcr.io/secs-dev/itmo-dating-people:latest
    build:
      context: ./backend/people
    environment:
      ITMO_DATING_VAULT_TOKEN: ${ITMO_DATING_VAULT_TOKEN?:err}
      ITMO_DATING_KEY_STORE_PASSWORD: ${ITMO_DATING_KEYSTORE_PASSWORD?:err}
    tty: true
    hostname: people-0.dating.se.ifmo.ru
    depends_on:
      database:
        condition: service_healthy
      consul:
        condition: service_started
      object-storage:
        condition: service_healthy
  people-1:
    extends:
      service: people-0
    hostname: people-1.dating.se.ifmo.ru
    profiles:
      - reliability
  object-storage:
    image: quay.io/minio/minio
    entrypoint: sh
    command: |
      -c 'mkdir -p /export/profile-photos && 
      minio server /export --console-address ":9001"'
    environment:
      MINIO_ROOT_USER: ${ITMO_DATING_MINIO_ROOT_USER?:err}
      MINIO_ROOT_PASSWORD: ${ITMO_DATING_MINIO_ROOT_PASSWORD?:err}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - minio-data:/export
    tty: true
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
    hostname: object-storage.dating.se.ifmo.ru
  database:
    image: postgres
    environment:
      POSTGRES_DB: ${ITMO_DATING_POSTGRES_DB?:err}
      POSTGRES_USER: ${ITMO_DATING_POSTGRES_USER?:err}
      POSTGRES_PASSWORD: ${ITMO_DATING_POSTGRES_PASSWORD?:err}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    tty: true
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${ITMO_DATING_POSTGRES_USER?:err}" ]
      interval: 1s
      timeout: 1s
      retries: 16
    hostname: database-primary.dating.se.ifmo.ru
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    command: '--no-collector.stat_bgwriter'
    environment:
      DATA_SOURCE_URI: database-primary.dating.se.ifmo.ru:5432/${ITMO_DATING_POSTGRES_DB?:err}?sslmode=disable
      DATA_SOURCE_USER: ${ITMO_DATING_POSTGRES_USER?:err}
      DATA_SOURCE_PASS: ${ITMO_DATING_POSTGRES_PASSWORD?:err}
    tty: true
    hostname: database-primary-exporter.dating.se.ifmo.ru
    depends_on:
      database:
        condition: service_healthy
  gateway:
    image: ghcr.io/secs-dev/itmo-dating-gateway:latest
    build:
      context: ./backend/gateway
    environment:
      ITMO_DATING_EXT_KEY_STORE_PASSWORD: ${ITMO_DATING_EXT_KEY_STORE_PASSWORD?:err}
      ITMO_DATING_KEY_STORE_PASSWORD: ${ITMO_DATING_KEYSTORE_PASSWORD?:err}
    tty: true
    hostname: gateway.dating.se.ifmo.ru
    ports:
      - "444:8080"
  config:
    image: ghcr.io/secs-dev/itmo-dating-config:latest
    build:
      context: ./backend/config
    environment:
      ITMO_DATING_KEY_STORE_PASSWORD: ${ITMO_DATING_KEYSTORE_PASSWORD?:err}
    tty: true
    hostname: config.dating.se.ifmo.ru
    depends_on:
      vault:
        condition: service_started
      consul:
        condition: service_started
  consul:
    image: ghcr.io/secs-dev/itmo-dating-consul:latest
    build:
      context: ./backend/consul
    volumes:
      - consul-data:/opt/consul/data
    tty: true
    hostname: server.dc1.consul
  consul-exporter:
    image: prom/consul-exporter
    command: --consul.server=server.dc1.consul:8500
    tty: true
    hostname: consul-exporter.dating.se.ifmo.ru
    depends_on:
      consul:
        condition: service_started
  vault:
    image: ghcr.io/secs-dev/itmo-dating-vault:latest
    build:
      context: ./backend/vault
    tty: true
    hostname: vault.dating.se.ifmo.ru
  haproxy:
    image: ghcr.io/secs-dev/itmo-dating-haproxy:latest
    build:
      context: ./backend/haproxy
    tty: true
    hostname: haproxy.dating.se.ifmo.ru
    ports:
      - "127.0.0.1:8445:8445"
      - "127.0.0.1:8446:8446"
      - "127.0.0.1:8447:8447"
      - "127.0.0.1:8455:8455"
      - "127.0.0.1:8456:8456"
      - "127.0.0.1:8457:8457"
  prometheus:
    image: ghcr.io/secs-dev/itmo-dating-prometheus:latest
    build:
      context: ./backend/prometheus
    user: root
    volumes:
      - prometheus-data:/prometheus
    tty: true
    hostname: prometheus.dating.se.ifmo.ru
  grafana:
    image: ghcr.io/secs-dev/itmo-dating-grafana:latest
    build:
      context: ./backend/grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${ITMO_DATING_GRAFANA_ADMIN_USER?:err}
      GF_SECURITY_ADMIN_PASSWORD: ${ITMO_DATING_GRAFANA_ADMIN_PASSWORD?:err}
      ITMO_DATING_PROMETHEUS_HOST: prometheus.dating.se.ifmo.ru
    volumes:
      - grafana-data:/var/lib/grafana
    tty: true
    hostname: grafana.dating.se.ifmo.ru
  tg-miniapp:
    image: ghcr.io/secs-dev/itmo-dating-tg-miniapp:latest
    build:
      context: frontend
    tty: true
    ports:
      - "443:443"
volumes:
  postgres-data:
  minio-data:
  consul-data:
  prometheus-data:
  grafana-data:
